plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.gazi'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

jar {
    enabled = false
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'org.projectlombok:lombok:1.18.26'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.hibernate:hibernate-core:6.4.0.Final'
    implementation 'org.hibernate:hibernate-spatial:6.4.0.Final'
    implementation 'com.opencsv:opencsv:5.5'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    // json
    implementation group: 'org.json', name: 'json', version: '20230227'

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Springdoc (swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // jsoup
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.15.3'

    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // logstash
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    // queryDSL 설정
    implementation "com.querydsl:querydsl-jpa:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    implementation 'org.seleniumhq.selenium:selenium-java:4.10.0'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.7.0'

    // firebase
    implementation 'com.google.firebase:firebase-admin:9.2.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.16.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}